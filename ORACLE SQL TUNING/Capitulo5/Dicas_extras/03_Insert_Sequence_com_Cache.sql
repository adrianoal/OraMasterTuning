CREATE TABLE ECOMMERCE.PEDIDO2 AS SELECT * FROM ECOMMERCE.PEDIDO WHERE 1=2;
/

BEGIN
  -- criando sequence sem cache
  EXECUTE IMMEDIATE 'CREATE SEQUENCE ECOMMERCE.SQ_PEDIDO_SC MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE NOORDER NOCYCLE';
  -- criando sequence com cache
  EXECUTE IMMEDIATE 'CREATE SEQUENCE ECOMMERCE.SQ_PEDIDO_CC MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER NOCYCLE';  
END;
/

SET SERVEROUTPUT ON
DECLARE 
  L_START         NUMBER;    
BEGIN
  L_START := DBMS_UTILITY.GET_TIME;
  -- executa insert c/ sequence sem cache
  INSERT  INTO ECOMMERCE.PEDIDO2
  SELECT  ECOMMERCE.SQ_PEDIDO_SC.NEXTVAL, CD_CLIENTE, DT_PEDIDO,
          VL_TOTAL, ID_STATUS, VL_DESCONTO
  FROM    ECOMMERCE.PEDIDO
  where   rownum < 100000;
  DBMS_OUTPUT.PUT_LINE('INSERT c/ sequence sem cache: ' || ROUND((DBMS_UTILITY.GET_TIME - L_START)/100,2) || 's');
  -- desfaz insercao dos dados
  ROLLBACK;
  
  L_START := DBMS_UTILITY.GET_TIME;
  -- executa insert c/ sequence com cache
  INSERT  INTO ECOMMERCE.PEDIDO2
  SELECT  ECOMMERCE.SQ_PEDIDO_CC.NEXTVAL, CD_CLIENTE, DT_PEDIDO,
          VL_TOTAL, ID_STATUS, VL_DESCONTO
  FROM    ECOMMERCE.PEDIDO
  where   rownum < 100000;
  DBMS_OUTPUT.PUT_LINE('INSERT c/ sequence com cache: ' || ROUND((DBMS_UTILITY.GET_TIME - L_START)/100,2) || 's');
  
  -- desfaz insercao dos dados
  ROLLBACK;
END;